#include <input/processors.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

// -------------------- Constants --------------------

#define ZMK_MOUSE_DEFAULT_SCRL_VAL 100
#define ZMK_POINTING_DEFAULT_SCRL_VAL 100
#define ZMK_MOUSE_POINTING_SCRL_VAL 100

// Layer Indexes

#define DEFAULT 0
#define SYMBOLS 1
#define FUNCS_NUMPAD 2
#define ARROW 3
#define MOUSE 4
#define BLUETOOTH 5

// -------------------- JIS Key Conversion Macros (日本語キーボード変換定義) --------------------

#define JP_DQUOTE       AT                // "
#define JP_AMPERSAND    CARET             // &
#define JP_QUOTE        AMPERSAND         // '
#define JP_EQUAL        UNDER             // =
#define JP_CARET        EQUAL             // ^
#define JP_YEN          0x89              // ¥
#define JP_PLUS         COLON             // +
#define JP_TILDE        PLUS              // ~
#define JP_PIPE         LS(0x89)          // |
#define JP_AT           LEFT_BRACKET      // @
#define JP_COLON        SINGLE_QUOTE      // :
#define JP_ASTERISK     DOUBLE_QUOTES     // *
#define JP_BACKQUOTE    LEFT_BRACE        // `
#define JP_UNDERSCORE   LS(0x87)          // _
#define JP_LBRACKET     RIGHT_BRACKET     // [
#define JP_RBRACKET     BACKSLASH         // ]
#define JP_LPAREN       ASTERISK          // (
#define JP_RPAREN       LEFT_PARENTHESIS  // )
#define JP_LBRACE       RIGHT_BRACE       // {
#define JP_RBRACE       PIPE              // }
#define JP_KANA         LANGUAGE_1        // かな
#define JP_EISU         LANGUAGE_2        // 英数
#define JP_HANZEN       GRAVE             // 半角/全角

// -------------------- Behavior Parameters --------------------

&mt {
    flavor = "balanced";
    tapping-term-ms = <250>;
    quick-tap-ms = <175>;
    require-prior-idle-ms = <150>;
};

&mkp_input_listener { input-processors = <&zip_temp_layer 4 5000>; };

/ {
    // -------- Combos --------

    combos {
        compatible = "zmk,combos";

        tab {
            bindings = <&kp TAB>;
            key-positions = <1 2>;
        };

        shift_tab {
            bindings = <&kp LS(TAB)>;
            key-positions = <2 3>;
        };

        default_esc {
            bindings = <&kp ESC>;
            key-positions = <0 1>;
            layers = <0>;
        };

        BT_SETTING {
            bindings = <&lt_to_layer_0 6 LC(LA(B))>;
            key-positions = <34 35 26>;
        };
    };

    // -------- Macros --------

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };

        exit_AML: exit_AML {
            compatible = "zmk,behavior-macro";
            wait-ms = <0>;
            tap-ms = <0>;
            #binding-cells = <0>;
            bindings = <&tog_off 4>;
            label = "exit_AML";
        };

        kp_exit_AML: kp_exit_AML {
            compatible = "zmk,behavior-macro-one-param";
            wait-ms = <0>;
            tap-ms = <0>;
            #binding-cells = <1>;
            bindings = <&macro_param_1to1 &kp MACRO_PLACEHOLDER &exit_AML>;
            label = "KP_exit_AML";
        };
    };

    // -------- Behaviors --------

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <250>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
        };

        scroll_up_down: behavior_sensor_rotate_mouse_wheel_up_down {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&msc SCRL_UP>, <&msc SCRL_DOWN>;

            tap-ms = <20>;
        };

        // --- JIS Key Mod Morph Behaviors ---

        jis_CRT_TLD: jis_CRT_TLD {
            compatible = "zmk,behavior-mod-morph";
            label = "^ ~";
            #binding-cells = <0>;
            bindings = <&kp JP_CARET>, <&kp JP_TILDE>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        jis_YEN_PIP: jis_YEN_PIP {
            compatible = "zmk,behavior-mod-morph";
            label = "\\ |";
            #binding-cells = <0>;
            bindings = <&kp JP_YEN>, <&kp JP_PIPE>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        jis_AT_BKQ: jis_AT_BKQ {
            compatible = "zmk,behavior-mod-morph";
            label = "@ `";
            #binding-cells = <0>;
            bindings = <&kp JP_AT>, <&kp JP_BACKQUOTE>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        jis_CLN_AST: jis_CLN_AST {
            compatible = "zmk,behavior-mod-morph";
            label = "CLN AST";
            #binding-cells = <0>;
            bindings = <&kp JP_COLON>, <&kp JP_ASTERISK>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        jis_YEN_UNS: jis_YEN_UNS {
            compatible = "zmk,behavior-mod-morph";
            label = "\\ _";
            #binding-cells = <0>;
            bindings = <&kp JP_YEN>, <&kp JP_UNDERSCORE>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        jis_LBK_LBT: jis_LBK_LBT {
            compatible = "zmk,behavior-mod-morph";
            label = "LBK LBT";
            #binding-cells = <0>;
            bindings = <&kp JP_LBRACKET>, <&kp JP_LBRACE>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        jis_RBK_RBT: jis_RBK_RBT {
            compatible = "zmk,behavior-mod-morph";
            label = "RBK RBT";
            #binding-cells = <0>;
            bindings = <&kp JP_RBRACKET>, <&kp JP_RBRACE>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        tog_off: toggle_layer_off {
            compatible = "zmk,behavior-toggle-layer";
            #binding-cells = <1>;
            display-name = "Toggle Layer Off";
            toggle-mode = "off";
        };

        mt_exit_AML_on_tap: mt_exit_AML_on_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "MT_exit_AML_ON_TAP";
            bindings = <&kp>, <&kp_exit_AML>;

            #binding-cells = <2>;
            tapping-term-ms = <250>;
            flavor = "balanced";
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
        };
    };

    // -------- Keymaps --------

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q                         &kp W         &kp E         &kp R                    &kp T                                                        &kp Y        &kp U  &kp I      &kp O       &kp P
&lt_to_layer_0 1 A            &kp S         &kp D         &kp F                    &kp G        &mkp MB1                         &kp ESC        &kp H        &kp J  &kp K      &kp L       &lt_to_layer_0 4 SEMICOLON
&mt_exit_AML_on_tap LSHIFT Z  &kp X         &kp C         &kp V                    &kp B        &kp LSHFT                        &kp RSHFT      &kp N        &kp M  &kp COMMA  &kp PERIOD  &mt RIGHT_SHIFT SLASH
&kp LCTRL                     &kp LEFT_WIN  &kp LEFT_ALT  &mt LSHIFT INT_MUHENKAN  &lt 2 SPACE  &lt_to_layer_0 2 INT_HENKAN      &kp BACKSPACE  &lt 3 ENTER                                &mt RIGHT_CONTROL DEL
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        symbols {
            bindings = <
&kp EXCLAMATION  &kp JP_DQUOTE  &kp HASH  &kp DOLLAR  &kp PERCENT                                 &kp ASTERISK   &kp LEFT_PARENTHESIS  &kp MINUS  &jis_CRT_TLD  &jis_YEN_PIP
&trans           &trans         &trans    &trans      &kp CARET    &trans             &kp CARET   &kp AMPERSAND  &trans                &trans     &jis_AT_BKQ   &jis_LBK_LBT
&trans           &trans         &trans    &trans      &trans       &kp LG(LA(K))      &kp INSERT  &trans         &trans                &trans     &jis_CLN_AST  &jis_RBK_RBT
&trans           &trans         &trans    &trans      &trans       &trans             &trans      &trans                                                        &jis_YEN_UNS
            >;
        };

        funcs_numpad {
            bindings = <
&kp F1   &kp F2   &kp F3               &kp F4      &kp F5                                  &kp JP_PLUS   &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp PERCENT
&kp F6   &kp F7   &kp F8               &kp F9      &kp F10   &trans       &kp JP_ASTERISK  &kp MINUS     &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp COMMA
&kp F11  &kp F12  &kp PRINTSCREEN      &kp INSERT  &kp HOME  &kp END      &kp SLASH        &kp NUMBER_0  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp PERIOD
&trans   &trans   &kp LA(PRINTSCREEN)  &trans      &trans    &trans       &trans           &trans                                                  &jis_YEN_PIP
            >;

            sensor-bindings = <&inc_dec_kp PAGE_UP PAGE_DOWN>;
        };

        arrow {
            bindings = <
&kp ESC         &kp LC(LS(TAB))         &kp UP_ARROW    &kp LC(TAB)              &kp LC(PAGE_UP)                          &trans  &kp HOME        &kp UP_ARROW    &kp PAGE_UP      &trans
&kp INSERT      &kp LEFT_ARROW          &kp DOWN_ARROW  &kp RIGHT_ARROW          &kp LC(PAGE_DOWN)  &kp HOME      &trans  &trans  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &trans
&kp LEFT_SHIFT  &kp LG(LS(LEFT_ARROW))  &trans          &kp LG(LS(RIGHT_ARROW))  &trans             &kp END       &trans  &trans  &kp END         &trans          &kp PAGE_DOWN    &trans
&trans          &trans                  &trans          &trans                   &trans             &trans        &trans  &trans                                                   &trans
            >;

            sensor-bindings = <&inc_dec_kp LC(PAGE_UP) LC(PAGE_DOWN)>;
        };

        mouse {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans    &trans    &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &mkp MB1  &mkp MB3  &mkp MB2  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans    &trans    &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                                &trans
            >;

            sensor-bindings = <&inc_dec_kp C_AC_ZOOM_OUT C_AC_ZOOM_IN>;
        };

        SCROLL {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                          &trans
            >;
        };

        bluetooth {
            bindings = <
&trans  &trans        &trans        &trans        &trans                           &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&trans  &trans        &trans        &trans        &trans  &trans      &trans       &trans        &trans        &trans        &trans        &trans
&trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans  &trans      &bootloader  &trans        &trans        &trans        &trans        &bt BT_CLR
&trans  &trans        &trans        &trans        &trans  &trans      &trans       &trans                                                  &bt BT_CLR_ALL
            >;
        };
    };
};
